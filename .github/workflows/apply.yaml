name: "Terraform apply on merge"
on:
  pull_request:
    types: [closed]
    branches:
      - master

env:
  TF_VERSION: 0.14.9
  TF_INPUT: 0
  TF_IN_AUTOMATION: true
  EXPAND_SUMMARY_DETAILS: false

jobs:
  merge-PR:
    if: github.event.pull_request.merged == true
    name: "Apply terraform on merged pull request"
    runs-on: ubuntu-latest
    steps:
      - name: "Set Env"
        run: echo "GH_HEAD_BRANCH is $(echo ${{ github.head_ref }} | cut -d / -f 3) && echo "GH_HEAD_BRANCH=$( echo ${{ github.head_ref }} | cut -d / -f 3)" >> $GITHUB_ENV
      - name: "Checkout"
        uses: actions/checkout@master
      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-west-2
      - name: "setup-terraform"
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - name: "Terraform init"
        id: debug
        run: echo '1' | TF_WORKSPACE=$GH_HEAD_BRANCH terraform -chdir=tf/envs/$GH_HEAD_BRANCH init
      - name: "Terraform Validate"
        id: validate
        run: terraform -chdir=tf/envs/$GH_HEAD_BRANCH validate -no-color
      - name: "Terraform Plan"
        id: plan
        run: echo '1' | TF_WORKSPACE=$GH_HEAD_BRANCH terraform -chdir=tf/envs/$GH_HEAD_BRANCH plan -no-color 
        continue-on-error: true
        env:
          TF_INPUT: 0
      - name: "Terraform Apply"
        id: apply
        run: echo '1' | TF_WORKSPACE=$GH_HEAD_BRANCH terraform -chdir=tf/envs/$GH_HEAD_BRANCH apply -no-color -input=false -auto-approve
        env:
          TF_INPUT: 0
